// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: msg_ids.proto

package pbgen

import proto "github.com/Cyinx/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type MainMsgID int32

const (
	MainMsgID_GENERAL_MSG  MainMsgID = 0
	MainMsgID_CLIENT_LOGIN MainMsgID = 1
	MainMsgID_GATE_DB      MainMsgID = 2
)

var MainMsgID_name = map[int32]string{
	0: "GENERAL_MSG",
	1: "CLIENT_LOGIN",
	2: "GATE_DB",
}
var MainMsgID_value = map[string]int32{
	"GENERAL_MSG":  0,
	"CLIENT_LOGIN": 1,
	"GATE_DB":      2,
}

func (x MainMsgID) String() string {
	return proto.EnumName(MainMsgID_name, int32(x))
}
func (MainMsgID) EnumDescriptor() ([]byte, []int) { return fileDescriptorMsgIds, []int{0} }

type HandlerMsgID int32

const (
	HandlerMsgID_MSG_ID_BEGIN   HandlerMsgID = 0
	HandlerMsgID_VERSION_CHECK  HandlerMsgID = 1
	HandlerMsgID_LOGIN_REQUEST  HandlerMsgID = 2
	HandlerMsgID_LUARPC_REQUEST HandlerMsgID = 3
)

var HandlerMsgID_name = map[int32]string{
	0: "MSG_ID_BEGIN",
	1: "VERSION_CHECK",
	2: "LOGIN_REQUEST",
	3: "LUARPC_REQUEST",
}
var HandlerMsgID_value = map[string]int32{
	"MSG_ID_BEGIN":   0,
	"VERSION_CHECK":  1,
	"LOGIN_REQUEST":  2,
	"LUARPC_REQUEST": 3,
}

func (x HandlerMsgID) String() string {
	return proto.EnumName(HandlerMsgID_name, int32(x))
}
func (HandlerMsgID) EnumDescriptor() ([]byte, []int) { return fileDescriptorMsgIds, []int{1} }

func init() {
	proto.RegisterEnum("pbgen.MainMsgID", MainMsgID_name, MainMsgID_value)
	proto.RegisterEnum("pbgen.HandlerMsgID", HandlerMsgID_name, HandlerMsgID_value)
}

func init() { proto.RegisterFile("msg_ids.proto", fileDescriptorMsgIds) }

var fileDescriptorMsgIds = []byte{
	// 205 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xcd, 0x2d, 0x4e, 0x8f,
	0xcf, 0x4c, 0x29, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2d, 0x48, 0x4a, 0x4f, 0xcd,
	0xd3, 0xb2, 0xe6, 0xe2, 0xf4, 0x4d, 0xcc, 0xcc, 0xf3, 0x2d, 0x4e, 0xf7, 0x74, 0x11, 0xe2, 0xe7,
	0xe2, 0x76, 0x77, 0xf5, 0x73, 0x0d, 0x72, 0xf4, 0x89, 0xf7, 0x0d, 0x76, 0x17, 0x60, 0x10, 0x12,
	0xe0, 0xe2, 0x71, 0xf6, 0xf1, 0x74, 0xf5, 0x0b, 0x89, 0xf7, 0xf1, 0x77, 0xf7, 0xf4, 0x13, 0x60,
	0x14, 0xe2, 0xe6, 0x62, 0x77, 0x77, 0x0c, 0x71, 0x8d, 0x77, 0x71, 0x12, 0x60, 0xd2, 0x8a, 0xe2,
	0xe2, 0xf1, 0x48, 0xcc, 0x4b, 0xc9, 0x49, 0x2d, 0x82, 0xe8, 0x17, 0xe0, 0xe2, 0xf1, 0x0d, 0x76,
	0x8f, 0xf7, 0x74, 0x89, 0x77, 0x72, 0x05, 0x29, 0x67, 0x10, 0x12, 0xe4, 0xe2, 0x0d, 0x73, 0x0d,
	0x0a, 0xf6, 0xf4, 0xf7, 0x8b, 0x77, 0xf6, 0x70, 0x75, 0xf6, 0x16, 0x60, 0x04, 0x09, 0x81, 0x0d,
	0x8b, 0x0f, 0x72, 0x0d, 0x0c, 0x75, 0x0d, 0x0e, 0x11, 0x60, 0x12, 0x12, 0xe2, 0xe2, 0xf3, 0x09,
	0x75, 0x0c, 0x0a, 0x70, 0x86, 0x8b, 0x31, 0x3b, 0x09, 0x9c, 0x78, 0x24, 0xc7, 0x78, 0xe1, 0x91,
	0x1c, 0xe3, 0x83, 0x47, 0x72, 0x8c, 0x13, 0x1e, 0xcb, 0x31, 0x24, 0xb1, 0x81, 0x1d, 0x6e, 0x0c,
	0x08, 0x00, 0x00, 0xff, 0xff, 0x7c, 0x53, 0xca, 0x02, 0xc9, 0x00, 0x00, 0x00,
}
